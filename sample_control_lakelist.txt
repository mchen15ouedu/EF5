[BASIC]
DEM = data/dem.tif
DDM = data/ddm.tif
FAM = data/fam.tif
Projection = EPSG:4326

[BASIN RedRiver]
LakeListFile = data/lakes.csv
LAKEOUTFLOWFILE = data/engineered_discharge.csv
Gauge = Gauge1

[TASK SimulationWithLake]
Model = CREST
Basin = RedRiver
Gauge = Gauge1
StartDate = 2024-01-01
EndDate = 2024-12-31
TimeStep = 1H
LakeModule = true
State = ./states
StateTime = 20240101_00
SaveStates = true

# Example lakes.csv (combined overflow + linear reservoir with user-friendly units):
# name,lat,lon,th_volume,area,klake
# LakeA,35.1,-97.2,0.1,0.5,24.0
# LakeB,36.2,-98.3,0.12,0.6,48.0
# Reservoir1,35.5,-97.8,0.15,0.7,12.0
# Note: 
# - Wet season: Outflow occurs when storage > thVolume (storage-based overflow)
# - Dry season: Linear reservoir outflow with exponential decay (O = S/K * exp(-dt/K))
# - Units: th_volume (km³), area (km²), klake (hours)
# - Initial storage = thVolume (lakes start full)
# - When storage = 0, outflow = 0 (naturally)
# - State files saved as: lake_storage_YYYYMMDD_HHUU.tif, lake_outflow_YYYYMMDD_HHUU.tif

# Example engineered_discharge.csv:
# time,Reservoir1
# 20240101-000000,100.0
# 20240101-010000,110.0
# 20240101-020000,120.0

# Lake Module Features with State Saving:
# 1. Automatic state saving/loading for lake storage and outflow
# 2. Grid-based state management for distributed simulations
# 3. Restart capability from any saved state
# 4. Integration with existing EF5 state system
# 5. Backward compatibility with existing lake configurations

# Note: The lake output CSV files will use the names from the 'name' column in lakes.csv, e.g., ts.LakeA.lake.csv, ts.Reservoir1.lake.csv, etc. 